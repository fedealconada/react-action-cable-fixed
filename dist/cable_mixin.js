var CableMixin;CableMixin=function(t){return{componentWillMount:function(){var t;if(!(this.props.cable||this.context&&this.context.cable))throw t=this.constructor.displayName?" of "+this.constructor.displayName:"",new Error("Could not find cable on this.props or this.context"+t)},childContextTypes:{cable:t.PropTypes.object},contextTypes:{cable:t.PropTypes.object},getChildContext:function(){return{cable:this.getCable()}},getCable:function(){return this.props.cable||this.context&&this.context.cable}}},CableMixin.componentWillMount=function(){throw new Error("ActionCableReact.CableMixin is a function that takes React as a parameter and returns the mixin, e.g.: mixins: [ActionCableReact.CableMixin(React)]")},module.exports=CableMixin;